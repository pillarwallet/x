// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PortfolioOverview /> displays loading skeleton when data is loading 1`] = `
.c0 {
  height: 77px;
  width: 180px;
  animation: hLhBjP 1s linear infinite alternate;
  border-radius: 10px;
  margin-bottom: 0;
}

.c1 {
  height: 36px;
  width: 150px;
  animation: hLhBjP 1s linear infinite alternate;
  border-radius: 10px;
  margin-bottom: 0;
}

.c2 {
  height: 36px;
  width: 190px;
  animation: hLhBjP 1s linear infinite alternate;
  border-radius: 10px;
  margin-bottom: 0;
}

.c3 {
  height: 36px;
  width: 80px;
  animation: hLhBjP 1s linear infinite alternate;
  border-radius: 10px;
  margin-bottom: 0;
}

<div
  className="flex bg-container_grey rounded-2xl p-10 gap-20 tablet:p-5 mobile:p-0 mobile:bg-[#1F1D23] mobile:flex-col mobile:gap-4"
  id="wallet-portfolio-tile-loader"
>
  <div
    className="flex flex-col justify-between"
  >
    <p
      className="text-base font-medium animate-pulse mobile:my-4"
    >
      Wallet portfolio data loading...
    </p>
    <div
      className="mobile:border mobile:border-medium_grey mobile:rounded-[10px] mobile:p-4 mobile:w-full"
    >
      <div
        className="c0"
      />
    </div>
  </div>
  <div
    className="flex w-full flex-col items-end justify-end mobile:justify-normal gap-5"
  >
    <div
      className="flex w-full gap-4 justify-end mobile:flex-row tablet:flex-col tablet:items-end mobile:flex-row mobile:justify-between mobile:items-start"
    >
      <div
        className="c1"
      />
      <div
        className="c2"
      />
    </div>
    <div
      className="c3"
    />
  </div>
</div>
`;

exports[`<PortfolioOverview /> renders correctly and matches snapshot 1`] = `
<div
  className="flex bg-container_grey rounded-2xl p-10 gap-20 tablet:p-5 mobile:p-0 mobile:bg-[#1F1D23] mobile:flex-col mobile:gap-4"
  id="wallet-portfolio-tile"
>
  <div
    className="flex flex-col justify-between"
  >
    <div
      className="desktop:flex tablet:flex mobile:hidden mb-[54px] gap-2.5 items-center"
    >
      <div
        className="bg-medium_grey rounded-full w-10 h-10 overflow-hidden"
      >
        <svg
          className="rounded-md"
          data-testid="random-avatar"
          fill="none"
          role="img"
          viewBox="0 0 80 80"
          xmlns="http://www.w3.org/2000/svg"
        >
          <mask
            height={80}
            id=":r0:"
            maskUnits="userSpaceOnUse"
            width={80}
            x={0}
            y={0}
          >
            <rect
              fill="#FFFFFF"
              height={80}
              width={80}
            />
          </mask>
          <g
            mask="url(#:r0:)"
          >
            <rect
              fill="#C271B4"
              height={80}
              width={80}
            />
            <path
              d="M32.414 59.35L50.376 70.5H72.5v-71H33.728L26.5 13.381l19.057 27.08L32.414 59.35z"
              fill="#C20D90"
              filter="url(#filter_:r0:)"
              transform="translate(4 4) rotate(276 40 40) scale(1.4)"
            />
            <path
              d="M22.216 24L0 46.75l14.108 38.129L78 86l-3.081-59.276-22.378 4.005 12.972 20.186-23.35 27.395L22.215 24z"
              fill="#92A1C6"
              filter="url(#filter_:r0:)"
              style={
                {
                  "mixBlendMode": "overlay",
                }
              }
              transform="translate(6 -6) rotate(54 40 40) scale(1.4)"
            />
          </g>
          <defs>
            <filter
              colorInterpolationFilters="sRGB"
              filterUnits="userSpaceOnUse"
              id="filter_:r0:"
            >
              <feFlood
                floodOpacity={0}
                result="BackgroundImageFix"
              />
              <feBlend
                in="SourceGraphic"
                in2="BackgroundImageFix"
                result="shape"
              />
              <feGaussianBlur
                result="effect1_foregroundBlur"
                stdDeviation={7}
              />
            </filter>
          </defs>
        </svg>
      </div>
      <p
        className="text-base font-medium undefined"
      >
        0x7F30
        ...
        5a347
      </p>
      <div
        className="w-4 h-4"
        onClick={[Function]}
      >
        <img
          alt="copy-adress-icon"
          className="cursor-pointer"
          src={
            {
              "ReactComponent": {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "default": "copy-icon.svg",
            }
          }
          style={
            {
              "height": "full",
              "width": "full",
            }
          }
        />
      </div>
    </div>
    <div
      className="mobile:border mobile:border-medium_grey mobile:rounded-[10px] mobile:p-4 mobile:w-full"
    >
      <p
        className="text-base font-medium text-purple_light mb-2"
      >
        title.totalBalance
      </p>
      <div
        className="flex gap-4 items-end"
      >
        <h1
          className="desktop:text-3xl desktop:leading-[45px] tablet:text-3xl tablet:leading-[45px] mobile:text-xl mobile:leading-5 font-medium text-[50px]"
        >
          $
          1000.00
        </h1>
        <div
          className="flex gap-1 items-center"
        >
          <img
            alt="percentage-up"
            className="w-[10px] h[9px]"
            src={
              {
                "ReactComponent": {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "default": "triangle-up-green.svg",
              }
            }
          />
          <p
            className="text-sm font-medium text-percentage_green"
          >
            1.00
            %
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="flex w-full flex-col items-end justify-end mobile:justify-normal gap-5"
  >
    <div
      className="flex w-full gap-4 justify-end mobile:flex-row tablet:flex-col tablet:items-end mobile:flex-row mobile:justify-between"
    />
  </div>
</div>
`;
