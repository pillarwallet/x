import React from 'react';

type IconProps = {
    width?: number | string;
    height?: number | string;
    fill?: string;
    stroke?: string;
    className?: string;
    rotate?: boolean;
    onAnimationEnd?: () => void;
};

export const CheckNotification: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#1FBA80',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            className={className}
            xmlns="http://www.w3.org/2000/svg"
        >
            <rect width="20" height="20" rx="10" />
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M14.6474 6.62982C15.128 7.12543 15.1158 7.91679 14.6202 8.39738L9.46393 13.3974C8.97907 13.8675 8.20843 13.8675 7.72357 13.3974L5.37982 11.1246C4.88421 10.6441 4.87204 9.8527 5.35263 9.35709C5.83321 8.86148 6.62458 8.84931 7.12018 9.3299L8.59375 10.7588L12.8798 6.60263C13.3754 6.12204 14.1668 6.13421 14.6474 6.62982Z"
                fill="white"
            />
        </svg>
    );
};

export const NotificationIcon: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = 'none',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            className={className}
            xmlns="http://www.w3.org/2000/svg"
        >
            <rect width="20" height="20" rx="10" fill="#E3A009" />
            <path
                d="M10 5.5L10 10.5"
                stroke="white"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
            />
            <path
                d="M10 14H10.01"
                stroke="white"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
            />
        </svg>
    );
};

export const CloseToast: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
        >
            <path d="M13.9598 4.06028L9.89938 8.1207L5.83908 4.06039L4.0603 5.83917L8.12061 9.89948L4.0603 13.9598L5.83919 15.7387L9.89949 11.6784L13.9598 15.7387L15.7386 13.9599L11.6783 9.89959L15.7387 5.83917L13.9598 4.06028Z" />
        </svg>
    );
};

export const ArrowBack: React.FC<IconProps> = ({
    width = 19,
    height = 16,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
            width={width}
            height={height}
            fill={fill}
            viewBox="0 0 19 16"
        >
            <path
                d="M7.92349123,0.707665364 L9.95936846,2.7435426 L6.21716346,6.4857476 L19.256232,6.4857476 L19.256232,9.3658776 L6.220282,9.3658776 L9.962412,13.1080076 L7.92349123,15.1469284 L0.705198992,7.9259576 L7.92349123,0.707665364 Z"
                transform="translate(-.697 .074)"
            />
        </svg>
    );
};

export const LoaderSvg: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    className = '',
    fill = '#EAE6C2',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            className={className != '' ? className : undefined}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                d="M20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10ZM3 10C3 13.866 6.13401 17 10 17C13.866 17 17 13.866 17 10C17 6.13401 13.866 3 10 3C6.13401 3 3 6.13401 3 10Z"
                fill="#EAE6C2"
            />
            <path
                d="M17.8871 6.83077C18.6558 6.52189 19.5414 6.8938 19.7319 7.70002C20.1264 9.36918 20.0868 11.1207 19.6046 12.7841C18.9825 14.9304 17.6594 16.8064 15.8464 18.1129C14.0335 19.4194 11.8352 20.081 9.60235 19.9921C7.87179 19.9232 6.19777 19.4066 4.73915 18.5043C4.03463 18.0685 3.96202 17.1107 4.49823 16.4792C5.03445 15.8478 5.97638 15.7877 6.70745 16.1773C7.63224 16.6702 8.6618 16.9523 9.72164 16.9945C11.2846 17.0567 12.8235 16.5936 14.0925 15.679C15.3616 14.7645 16.2877 13.4513 16.7232 11.9489C17.0185 10.9301 17.0767 9.86421 16.9017 8.83098C16.7634 8.01419 17.1184 7.13965 17.8871 6.83077Z"
                fill="#FDE937"
            />
        </svg>
    );
};

export const CloseNew: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#000',
    stroke = '#B0B0B0',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 14 14"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
        >
            <path d="M1 13L13 1" stroke={stroke} />
            <path d="M1 1L13 13" stroke={stroke} />
        </svg>
    );
};

export const SearchIcon: React.FC<IconProps> = ({
    width = 18,
    height = 17,
    fill = '#B0B0B0',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 18 17"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M1.40555 6.89362C1.40555 4.10375 3.68577 1.83203 6.52898 1.83203C9.37219 1.83203 11.6524 4.10375 11.6524 6.89362C11.6524 9.68348 9.37219 11.9552 6.52898 11.9552C3.68577 11.9552 1.40555 9.68348 1.40555 6.89362ZM6.52898 0.832031C3.14308 0.832031 0.405548 3.54192 0.405548 6.89362C0.405548 10.2453 3.14308 12.9552 6.52898 12.9552C9.91488 12.9552 12.6524 10.2453 12.6524 6.89362C12.6524 3.54192 9.91488 0.832031 6.52898 0.832031ZM17.1019 15.2396L13.0677 11.2461L11.6606 12.6675L15.6949 16.661L17.1019 15.2396Z"
            />
        </svg>
    );
};

export const Lock: React.FC<IconProps> = ({
    width = 13,
    height = 16,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 13 16"
            fill={fill}
            className={className != '' ? className : undefined}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path d="M1.51111 6.44592H2.93333V5.15556C2.93333 2.99227 4.31649 1.42222 6.22222 1.42222C8.12795 1.42222 9.51111 2.99227 9.51111 5.15556V6.44592H10.9333V5.15556C10.9333 2.16823 8.952 0 6.22222 0C3.49244 0 1.51111 2.16823 1.51111 5.15556V6.44592Z" />
            <path d="M0 8.04297V15.2919C5.18635e-06 15.4797 0.0746171 15.6598 0.207422 15.7926C0.340227 15.9254 0.520348 16 0.70816 16H11.7363C11.9241 16 12.1042 15.9254 12.237 15.7926C12.3698 15.6598 12.4444 15.4797 12.4444 15.2919V8.04297C12.4444 7.85515 12.3698 7.67503 12.237 7.54223C12.1042 7.40943 11.9241 7.33482 11.7363 7.33482H0.70816C0.520346 7.33482 0.340224 7.40943 0.207418 7.54223C0.0746125 7.67503 1.88598e-06 7.85515 0 8.04297ZM4.76325 10.0884C4.79319 9.8398 4.88615 9.603 5.0333 9.40044C5.18045 9.19788 5.37692 9.03628 5.60406 8.93097C5.8312 8.82565 6.08148 8.78012 6.33116 8.79869C6.58084 8.81726 6.82163 8.89932 7.03069 9.03708C7.23976 9.17484 7.41015 9.36373 7.52572 9.58583C7.64128 9.80793 7.69818 10.0559 7.69102 10.3061C7.68386 10.5564 7.61287 10.8007 7.4848 11.0158C7.35672 11.2309 7.1758 11.4098 6.9592 11.5354C6.89158 11.5769 6.83807 11.638 6.80569 11.7104C6.77331 11.7829 6.76355 11.8635 6.7777 11.9416L7.03743 13.535C7.05902 13.6509 7.05624 13.7701 7.02928 13.8848C7.00232 13.9996 6.95177 14.1075 6.88084 14.2017C6.80991 14.2959 6.72016 14.3743 6.61729 14.4319C6.51442 14.4895 6.40069 14.525 6.28333 14.5363C6.15791 14.5455 6.03202 14.5262 5.91514 14.4798C5.79825 14.4333 5.69341 14.361 5.60848 14.2683C5.52356 14.1755 5.46076 14.0647 5.42481 13.9442C5.38886 13.8237 5.38069 13.6966 5.40091 13.5724L5.66684 11.9409C5.68022 11.8614 5.66929 11.7797 5.6355 11.7066C5.60171 11.6334 5.54662 11.5722 5.47745 11.5308C5.23074 11.3862 5.03169 11.1726 4.9048 10.9163C4.7779 10.66 4.7287 10.3722 4.76325 10.0884Z" />
        </svg>
    );
};

export const UnLock: React.FC<IconProps> = ({
    width = 13,
    height = 16,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 13 16"
            fill={fill}
            className={className != '' ? className : undefined}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path d="M10.8698 4.26C10.8498 4.14 10.8298 4.02 10.8098 3.91C10.7398 3.56 10.6398 3.22 10.5098 2.9C9.77977 1.14 8.19977 0 6.21977 0C3.48977 0 1.50977 2.17 1.50977 5.16V6.45H2.92977V5.16C2.92977 3 4.30977 1.43 6.21977 1.43C7.61977 1.43 8.72976 2.27 9.22976 3.58C9.30976 3.79 9.37977 4.02 9.41977 4.26C9.42977 4.32 9.43976 4.38 9.44977 4.44L10.8698 4.26Z" />
            <path d="M0 8.03996V15.29C0 15.48 0.07 15.66 0.21 15.79C0.35 15.92 0.52 16 0.71 16H11.74C11.93 16 12.11 15.93 12.24 15.79C12.37 15.66 12.45 15.48 12.45 15.29V8.03996C12.45 7.84996 12.38 7.66996 12.24 7.53996C12.11 7.40996 11.93 7.32996 11.74 7.32996H0.71C0.52 7.32996 0.34 7.39996 0.21 7.53996C0.07 7.67996 0 7.85996 0 8.03996ZM4.76 10.09C4.79 9.83996 4.89 9.59996 5.03 9.39996C5.18 9.19996 5.38 9.03996 5.6 8.92996C5.83 8.82996 6.08 8.77996 6.33 8.79996C6.58 8.81996 6.82 8.89996 7.03 9.03996C7.24 9.17996 7.41 9.36996 7.53 9.58996C7.65 9.80996 7.7 10.06 7.7 10.31C7.69 10.56 7.62 10.8 7.49 11.02C7.36 11.24 7.18 11.41 6.96 11.54C6.89 11.58 6.84 11.64 6.81 11.71C6.78 11.78 6.77 11.86 6.78 11.94L7.04 13.53C7.06 13.65 7.06 13.77 7.03 13.88C7 14 6.95 14.11 6.88 14.2C6.81 14.29 6.72 14.37 6.62 14.43C6.52 14.49 6.4 14.52 6.29 14.53C6.16 14.54 6.04 14.52 5.92 14.47C5.8 14.42 5.7 14.35 5.61 14.26C5.53 14.17 5.46 14.06 5.43 13.94C5.39 13.82 5.39 13.69 5.41 13.57L5.68 11.94C5.69 11.86 5.68 11.78 5.65 11.71C5.62 11.64 5.56 11.58 5.49 11.53C5.24 11.39 5.04 11.17 4.92 10.92C4.78 10.66 4.73 10.37 4.76 10.09Z" />
        </svg>
    );
};

export const NewSwapMobile: React.FC<IconProps> = ({
    width = 32,
    height = 32,
    fill = '#1E1E1E',
    className = '',
    onAnimationEnd,
}) => {
    return (
        <svg
            width={width}
            height={height}
            fill={fill}
            className={className != '' ? className : undefined}
            onAnimationEnd={onAnimationEnd}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path d="M9.38464 15.2244L11.0209 13.6368L11.0209 22L12.9791 21.9998L12.9791 13.6368L14.6154 15.2244L16 13.881L12 10L8 13.8809L9.38464 15.2244Z" />
            <path d="M22.6154 16.8603L20.9791 18.4221L20.9791 10L19.0209 10.0002L19.0209 18.4221L17.3846 16.8603L16 18.1819L20 22L24 18.182L22.6154 16.8603Z" />
        </svg>
    );
};

export const Pointer: React.FC<IconProps> = ({
    width = 17,
    height = 15,
    fill = '#B0B0B0',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 17 15"
            fill={fill}
            className={className != '' ? className : undefined}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path d="M10.1821 0.542861L8.46421 2.27865L12.3295 6.14391L-3.51209e-07 6.14391L-2.4483e-07 8.5776L12.3295 8.5776L8.46421 12.4429L10.1821 14.1786L17 7.36076L10.1821 0.542861Z" />
        </svg>
    );
};

export const SwapArrow: React.FC<IconProps> = ({
    width = 16,
    height = 18,
    fill = '#1E1E1E',
    className = '',
    onAnimationEnd,
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 16 18"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
            className={className}
            onAnimationEnd={onAnimationEnd}
        >
            <path d="M9.10812 1.52329L10.9061 3.32121L1.4345 3.32121L1.43468 5.47294L10.9061 5.47293L9.10805 7.27089L10.6295 8.79232L15.0249 4.39703L10.6296 0.00183086L9.10812 1.52329Z" />
            <path d="M6.89188 16.4768L5.09392 14.6789L14.7894 14.6789L14.7892 12.5271L5.09394 12.5271L6.89194 10.7292L5.37048 9.20775L0.975097 13.603L5.37039 17.9982L6.89188 16.4768Z" />
        </svg>
    );
};

export const ArrowExchange: React.FC<IconProps> = ({
    width = 14,
    height = 10,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 14 10"
            fill={fill}
            className={className != '' ? className : undefined}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path d="M0.292969 2.35367L1.70718 0.939453L7.00008 6.23235L12.293 0.939453L13.7072 2.35367L7.00008 9.06077L0.292969 2.35367Z" />
        </svg>
    );
};

export const SuccessIcon: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#2AA74D',
    className = '',
}) => {
    return (
        <svg
            className={className}
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M18.5619 5.16245L7.42187 16.9767L0.833008 10.6243L2.68387 8.70452L7.33156 13.1854L16.6217 3.33301L18.5619 5.16245Z"
            />
        </svg>
    );
};

export const CopyIcon: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#B0B0B0',
    className = '',
}) => {
    return (
        <svg
            className={className}
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M10.1351 1.66699H14.866C15.3052 1.66698 15.6841 1.66697 15.9962 1.69247C16.3256 1.71939 16.6532 1.77884 16.9685 1.93948C17.4385 2.17899 17.8215 2.56129 18.0614 3.03204C18.222 3.34735 18.2814 3.67504 18.3084 4.00449C18.3339 4.31663 18.3339 4.69559 18.3338 5.13487V9.86584C18.3339 10.3051 18.3339 10.6841 18.3084 10.9962C18.2814 11.3257 18.222 11.6534 18.0614 11.9687C17.8215 12.4395 17.4385 12.8217 16.9685 13.0612C16.6532 13.2218 16.3256 13.2812 15.9961 13.3082C15.6839 13.3337 15.3049 13.3337 14.8655 13.3337H13.3338V14.8658C13.3339 15.3051 13.3339 15.6841 13.3084 15.9962C13.2814 16.3257 13.222 16.6534 13.0614 16.9687C12.8215 17.4395 12.4384 17.8217 11.9685 18.0612C11.6532 18.2218 11.3257 18.2812 10.9962 18.3082C10.6841 18.3337 10.3051 18.3337 9.86565 18.3337H5.1354C4.69593 18.3337 4.31677 18.3337 4.00446 18.3082C3.67498 18.2813 3.34718 18.2218 3.03183 18.0612C2.5613 17.8214 2.1791 17.439 1.93948 16.9687C1.77882 16.6534 1.71939 16.3257 1.69247 15.9962C1.66697 15.6841 1.66698 15.3051 1.66699 14.8658V10.1349C1.66698 9.69565 1.66697 9.31667 1.69247 9.00451C1.71938 8.67506 1.77881 8.34736 1.93948 8.03204C2.17905 7.56185 2.56121 7.17927 3.03183 6.93948C3.3472 6.77879 3.67501 6.71938 4.00448 6.69247C4.3167 6.66697 4.69574 6.66698 5.13505 6.66699L6.66699 6.66699L6.66699 5.13493C6.66698 4.69564 6.66697 4.31666 6.69247 4.00451C6.71938 3.67506 6.77881 3.34736 6.93948 3.03204C7.17905 2.56185 7.56121 2.17927 8.03183 1.93948C8.3472 1.77879 8.67501 1.71938 9.00448 1.69247C9.3167 1.66697 9.69575 1.66698 10.1351 1.66699ZM7.49019 8.33366C7.49356 8.3337 7.49694 8.33372 7.50033 8.33372C7.50371 8.33372 7.50709 8.3337 7.51046 8.33366H9.83382C10.3143 8.33366 10.6244 8.33431 10.8604 8.3536C11.0867 8.37209 11.1706 8.40347 11.2118 8.42449C11.369 8.50456 11.4966 8.63222 11.5763 8.78869C11.5973 8.82989 11.6287 8.91382 11.6472 9.14021C11.6665 9.37632 11.6672 9.68655 11.6672 10.167V12.4829C11.6671 12.4887 11.667 12.4945 11.667 12.5003C11.667 12.5061 11.6671 12.5119 11.6672 12.5177V14.8337C11.6672 15.3142 11.6665 15.6244 11.6472 15.8605C11.6287 16.0869 11.5973 16.1708 11.5763 16.212C11.4967 16.3684 11.3691 16.496 11.2118 16.5761C11.1706 16.5972 11.0867 16.6285 10.8604 16.647C10.6244 16.6663 10.3143 16.667 9.83382 16.667H5.16716C4.68672 16.667 4.37638 16.6663 4.14018 16.647C3.91364 16.6285 3.82965 16.5971 3.78848 16.5761C3.63181 16.4963 3.50445 16.369 3.42449 16.212C3.40349 16.1708 3.3721 16.0869 3.3536 15.8605C3.33431 15.6244 3.33366 15.3142 3.33366 14.8337V10.1671C3.33366 9.68659 3.33431 9.37635 3.3536 9.14023C3.3721 8.91382 3.4035 8.82988 3.42449 8.78869C3.50449 8.63167 3.6319 8.50427 3.78848 8.42449C3.82964 8.40352 3.91362 8.3721 4.14016 8.3536C4.37637 8.33431 4.6867 8.33366 5.16716 8.33366H7.49019ZM13.3338 11.667V10.1349C13.3339 9.69559 13.3339 9.31663 13.3084 9.00449C13.2814 8.67503 13.222 8.34735 13.0614 8.03204C12.8215 7.56129 12.4385 7.17899 11.9685 6.93948C11.6532 6.77884 11.3256 6.71939 10.9962 6.69247C10.6841 6.66697 10.3052 6.66698 9.86596 6.66699L8.33366 6.66699V5.16705C8.33366 4.68659 8.33431 4.37635 8.3536 4.14023C8.3721 3.91382 8.4035 3.82988 8.42449 3.78869C8.50449 3.63167 8.6319 3.50427 8.78848 3.42449C8.82964 3.40352 8.91362 3.3721 9.14016 3.3536C9.37637 3.33431 9.6867 3.33366 10.1672 3.33366H14.8338C15.3143 3.33366 15.6244 3.33431 15.8604 3.3536C16.0867 3.37209 16.1706 3.40347 16.2118 3.42449C16.369 3.50456 16.4966 3.63222 16.5763 3.78869C16.5973 3.82989 16.6287 3.91382 16.6472 4.14021C16.6665 4.37633 16.6672 4.68655 16.6672 5.16701V9.8337C16.6672 10.3142 16.6665 10.6244 16.6472 10.8605C16.6287 11.0869 16.5973 11.1708 16.5763 11.212C16.4967 11.3684 16.3691 11.496 16.2118 11.5761C16.1706 11.5972 16.0867 11.6285 15.8604 11.647C15.6243 11.6663 15.3141 11.667 14.8337 11.667H13.3338Z"
            />
        </svg>
    );
};

export const LinkIcon: React.FC<IconProps> = ({
    className = '',
    width = 20,
    height = 20,
    fill = '#B0B0B0',
}) => {
    return (
        <svg
            className={className}
            width={width}
            height={height}
            viewBox="0 0 20 20"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M12.4997 4.99967C12.0394 4.99967 11.6663 4.62658 11.6663 4.16634C11.6663 3.7061 12.0394 3.33301 12.4997 3.33301H16.6663C17.1266 3.33301 17.4997 3.7061 17.4997 4.16634V8.33301C17.4997 8.79325 17.1266 9.16634 16.6663 9.16634C16.2061 9.16634 15.833 8.79325 15.833 8.33301V6.17819L11.4223 10.5889C11.0968 10.9144 10.5692 10.9144 10.2438 10.5889C9.91832 10.2635 9.91832 9.73586 10.2438 9.41042L14.6545 4.99967H12.4997ZM6.80107 4.16634H8.33317C8.79341 4.16634 9.16651 4.53944 9.16651 4.99967C9.16651 5.45991 8.79341 5.83301 8.33317 5.83301H6.83317C6.35272 5.83301 6.04239 5.83366 5.80617 5.85295C5.57963 5.87145 5.49565 5.90287 5.4545 5.92384C5.29791 6.00362 5.17051 6.13102 5.0905 6.28803C5.06951 6.32925 5.03811 6.41317 5.01962 6.63953C5.00032 6.87563 4.99968 7.18584 4.99968 7.6663V13.9996C4.99968 14.4801 5.00032 14.7903 5.01962 15.0265C5.03811 15.2529 5.06952 15.3368 5.0905 15.378C5.17046 15.535 5.29782 15.6623 5.4545 15.7422C5.49567 15.7631 5.57966 15.7945 5.80619 15.8131C6.0424 15.8324 6.35273 15.833 6.83317 15.833H13.1665C13.647 15.833 13.9571 15.8324 14.1931 15.8131C14.4193 15.7946 14.5032 15.7632 14.5445 15.7422C14.7017 15.662 14.8294 15.5344 14.909 15.378C14.93 15.3369 14.9614 15.2531 14.9798 15.0266C14.9991 14.7905 14.9997 14.4802 14.9997 13.9997V12.4997C14.9997 12.0394 15.3728 11.6663 15.833 11.6663C16.2932 11.6663 16.6663 12.0394 16.6663 12.4997L16.6663 14.0339C16.6664 14.4722 16.6664 14.8505 16.641 15.1621C16.6141 15.4915 16.5547 15.8193 16.394 16.1347C16.1541 16.6055 15.7711 16.9877 15.3012 17.2272C14.9859 17.3878 14.6583 17.4473 14.3289 17.4742C14.0168 17.4997 13.6378 17.4997 13.1983 17.4997H6.80141C6.36195 17.4997 5.98279 17.4997 5.67048 17.4742C5.341 17.4473 5.0132 17.3878 4.69785 17.2272C4.22732 16.9874 3.84511 16.605 3.60549 16.1347C3.44483 15.8194 3.3854 15.4917 3.35848 15.1622C3.33298 14.85 3.33299 14.471 3.33301 14.0318V7.63418C3.33299 7.19489 3.33298 6.81593 3.35848 6.5038C3.3854 6.17435 3.44484 5.84669 3.60549 5.53138C3.84507 5.06119 4.22723 4.67862 4.69785 4.43882C5.01321 4.27814 5.34102 4.21872 5.6705 4.19181C5.98272 4.16631 6.36176 4.16633 6.80107 4.16634Z"
            />
        </svg>
    );
};

export const Close: React.FC<IconProps> = ({
    width = 20,
    height = 20,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 24 24"
            fill={fill}
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
        >
            <path d="M6 6L20 20" stroke={fill} />
            <path d="M6 20L20 6" stroke={fill} />
        </svg>
    );
};

export const ArrowBottom: React.FC<IconProps> = ({
    width = 15,
    height = 20,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
            width={width}
            height={height}
            viewBox="0 0 15 20"
            fill={fill}
        >
            <polygon
                points="5.226 2.782 7.262 4.818 3.52 8.56 16.559 8.56 16.559 11.44 3.523 11.44 7.265 15.182 5.226 17.221 -1.992 10"
                transform="rotate(-90 7.284 10.001)"
            />
        </svg>
    );
};

export const RoundedSuccessIcon: React.FC<IconProps> = ({
    width = 40,
    height = 40,
}) => {
    return (
        <svg
            width={width}
            height={height}
            viewBox="0 0 40 40"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <rect width="40" height="40" rx="20" fill="#1FBA80" />
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M29.2948 13.2596C30.2559 14.2509 30.2316 15.8336 29.2404 16.7948L18.9279 26.7948C17.9581 27.7351 16.4169 27.7351 15.4471 26.7948L10.7596 22.2493C9.76842 21.2881 9.74407 19.7054 10.7053 18.7142C11.6664 17.723 13.2492 17.6986 14.2404 18.6598L17.1875 21.5176L25.7596 13.2053C26.7509 12.2441 28.3336 12.2684 29.2948 13.2596Z"
                fill="#fff"
            />
        </svg>
    );
};

export const WidgetBy: React.FC<IconProps> = ({ className = '' }) => (
    <svg
        width="98"
        height="16"
        viewBox="0 0 98 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
    >
        <path
            d="M0.789062 12.1191V4.11914H2.20313V7.11133H2.26172C2.33464 6.96549 2.4375 6.81055 2.57031 6.64648C2.70312 6.47982 2.88281 6.33789 3.10938 6.2207C3.33594 6.10091 3.625 6.04102 3.97656 6.04102C4.4401 6.04102 4.85807 6.15951 5.23047 6.39648C5.60547 6.63086 5.90234 6.97852 6.12109 7.43945C6.34245 7.89779 6.45313 8.46029 6.45313 9.12695C6.45313 9.78581 6.34505 10.3457 6.12891 10.8066C5.91276 11.2676 5.61849 11.6191 5.24609 11.8613C4.8737 12.1035 4.45182 12.2246 3.98047 12.2246C3.63672 12.2246 3.35156 12.1673 3.125 12.0527C2.89844 11.9382 2.71615 11.8001 2.57812 11.6387C2.44271 11.4746 2.33724 11.3197 2.26172 11.1738H2.17969V12.1191H0.789062ZM2.17578 9.11914C2.17578 9.50716 2.23047 9.84701 2.33984 10.1387C2.45182 10.4303 2.61198 10.6582 2.82031 10.8223C3.03125 10.9837 3.28646 11.0645 3.58594 11.0645C3.89844 11.0645 4.16016 10.9811 4.37109 10.8145C4.58203 10.6452 4.74089 10.4147 4.84766 10.123C4.95703 9.82878 5.01172 9.49414 5.01172 9.11914C5.01172 8.74674 4.95833 8.41602 4.85156 8.12695C4.74479 7.83789 4.58594 7.61133 4.375 7.44727C4.16406 7.2832 3.90104 7.20117 3.58594 7.20117C3.28385 7.20117 3.02734 7.2806 2.81641 7.43945C2.60547 7.59831 2.44531 7.82096 2.33594 8.10742C2.22917 8.39388 2.17578 8.73112 2.17578 9.11914ZM8.33008 14.3691C8.13737 14.3691 7.95898 14.3535 7.79492 14.3223C7.63346 14.2936 7.50456 14.2598 7.4082 14.2207L7.73633 13.1191C7.94206 13.179 8.12565 13.2077 8.28711 13.2051C8.44857 13.2025 8.59049 13.1517 8.71289 13.0527C8.83789 12.9564 8.94336 12.7949 9.0293 12.5684L9.15039 12.2441L6.97461 6.11914H8.47461L9.85742 10.6504H9.91992L11.3066 6.11914H12.8105L10.4082 12.8457C10.2962 13.1634 10.1478 13.4355 9.96289 13.6621C9.77799 13.8913 9.55143 14.0658 9.2832 14.1855C9.01758 14.3079 8.69987 14.3691 8.33008 14.3691Z"
            fill="#DADADA"
        />
        <g opacity="0.5">
            <path
                opacity="0.95"
                fillRule="evenodd"
                clipRule="evenodd"
                d="M20.1253 9.39751C20.1928 9.89676 20.3253 10.2699 20.5229 10.5171C20.8844 10.9669 21.5037 11.1918 22.3808 11.1918C22.9061 11.1918 23.3326 11.1325 23.6603 11.0138C24.282 10.7865 24.5929 10.3639 24.5929 9.746C24.5929 9.38515 24.4386 9.10589 24.1302 8.90817C23.8218 8.7154 23.3374 8.54487 22.6772 8.39658L21.5495 8.13706C20.441 7.88004 19.6747 7.60076 19.2506 7.29922C18.5325 6.79505 18.1735 6.00665 18.1735 4.93405C18.1735 3.95534 18.5205 3.14226 19.2145 2.49472C19.9085 1.84721 20.9277 1.52344 22.2723 1.52344C23.3953 1.52344 24.3531 1.82865 25.1457 2.43911C25.9385 3.04958 26.3543 3.93557 26.393 5.09718H24.2531C24.2145 4.43975 23.935 3.97265 23.4145 3.69584C23.0675 3.51296 22.6362 3.42151 22.1205 3.42151C21.547 3.42151 21.0892 3.54016 20.747 3.77741C20.4048 4.01466 20.2338 4.34583 20.2338 4.77093C20.2338 5.16142 20.4025 5.45307 20.7398 5.64584C20.9567 5.77436 21.4193 5.92509 22.1278 6.0981L23.964 6.55039C24.7687 6.74812 25.376 7.01253 25.7856 7.34374C26.422 7.8578 26.74 8.60168 26.74 9.57547C26.74 10.5739 26.3678 11.4031 25.6229 12.063C24.8785 12.7229 23.8266 13.0528 22.4675 13.0528C21.0796 13.0528 19.988 12.7278 19.1928 12.0778C18.3976 11.4278 18 10.5344 18 9.39751H20.1253ZM27.4123 6.26862V4.76352H28.5111V2.50956H30.5497V4.76352H31.8291V6.26862H30.5497V10.5393C30.5497 10.8705 30.5905 11.0769 30.6723 11.1584C30.7545 11.24 31.0048 11.2808 31.4244 11.2808C31.4869 11.2808 31.5532 11.2795 31.6229 11.2771C31.693 11.2746 31.7618 11.2709 31.8291 11.2659V12.8452L30.8533 12.8823C29.8798 12.9169 29.2148 12.7439 28.8581 12.3633C28.6267 12.1211 28.5111 11.7479 28.5111 11.2437V6.26862H27.4123ZM36.2604 6.21674C35.7835 6.21674 35.4134 6.36999 35.1509 6.67644C34.8881 6.98289 34.7231 7.39811 34.6558 7.92205H37.8581C37.8243 7.36351 37.6592 6.93965 37.3629 6.65048C37.0667 6.36131 36.6989 6.21674 36.2604 6.21674ZM36.2604 4.47435C36.9158 4.47435 37.5062 4.6004 38.0314 4.85249C38.557 5.10458 38.9907 5.50248 39.3329 6.04621C39.6413 6.52567 39.8412 7.08174 39.9327 7.71444C39.9859 8.08517 40.0076 8.619 39.998 9.31594H34.605C34.634 10.1266 34.8823 10.695 35.3498 11.0213C35.634 11.2239 35.9762 11.3253 36.3761 11.3253C36.8004 11.3253 37.1447 11.2017 37.4099 10.9545C37.5546 10.8211 37.6823 10.6357 37.7932 10.3985H39.8968C39.8436 10.8779 39.6002 11.3648 39.1665 11.8591C38.4917 12.645 37.5473 13.038 36.3329 13.038C35.3305 13.038 34.4462 12.7068 33.6796 12.0444C32.9133 11.3821 32.5304 10.3045 32.5304 8.81176C32.5304 7.41291 32.8761 6.34031 33.5677 5.59392C34.2593 4.84753 35.1568 4.47435 36.2604 4.47435ZM45.7304 8.84144C45.6005 8.92545 45.469 8.99341 45.3367 9.04533C45.2041 9.09722 45.0221 9.14542 44.7908 9.1899L44.3281 9.27886C43.8944 9.35798 43.5836 9.45435 43.3954 9.56803C43.0774 9.7608 42.9185 10.0599 42.9185 10.4652C42.9185 10.826 43.0159 11.0867 43.2114 11.2474C43.4065 11.408 43.6437 11.4883 43.9234 11.4883C44.3667 11.4883 44.7752 11.3549 45.1485 11.088C45.5221 10.8211 45.7162 10.3342 45.7304 9.62735V8.84144ZM44.48 7.85532C44.8605 7.80588 45.133 7.74412 45.2966 7.66996C45.5908 7.54143 45.7376 7.34126 45.7376 7.06938C45.7376 6.7382 45.6257 6.50959 45.4016 6.38355C45.1775 6.2575 44.8484 6.1945 44.4147 6.1945C43.9282 6.1945 43.5836 6.31807 43.3812 6.56523C43.2366 6.74812 43.1402 6.99525 43.0919 7.30666H41.104C41.1475 6.5998 41.3402 6.01901 41.6823 5.56427C42.2269 4.85249 43.1616 4.4966 44.4873 4.4966C45.3498 4.4966 46.1161 4.67208 46.7859 5.02302C47.4558 5.37399 47.7908 6.03633 47.7908 7.01009V10.7173C47.7908 10.9743 47.7956 11.2857 47.8053 11.6515C47.8198 11.9283 47.8605 12.1161 47.9282 12.215C47.9955 12.3138 48.0967 12.3954 48.2317 12.4597V12.771H45.9907C45.9282 12.608 45.8847 12.4547 45.8605 12.3113C45.8367 12.168 45.8174 12.0049 45.8029 11.822C45.5183 12.1384 45.1906 12.4077 44.8198 12.6302C44.3764 12.8922 43.875 13.0231 43.316 13.0231C42.6029 13.0231 42.0135 12.8143 41.5484 12.3966C41.0836 11.979 40.8509 11.387 40.8509 10.6209C40.8509 9.62735 41.2245 8.90817 41.9714 8.46331C42.3812 8.2211 42.9835 8.04809 43.7787 7.94429L44.48 7.85532ZM51.7234 12.771H49.663V1.84225H51.7234V12.771ZM52.9234 6.26862V4.76352H54.0221V2.50956H56.0608V4.76352H57.3402V6.26862H56.0608V10.5393C56.0608 10.8705 56.1019 11.0769 56.1837 11.1584C56.2656 11.24 56.5163 11.2808 56.9355 11.2808C56.9983 11.2808 57.0643 11.2795 57.1344 11.2771C57.2041 11.2746 57.2728 11.2709 57.3402 11.2659V12.8452L56.3643 12.8823C55.3909 12.9169 54.7259 12.7439 54.3692 12.3633C54.1378 12.1211 54.0221 11.7479 54.0221 11.2437V6.26862H52.9234ZM63.008 4.48179C63.4945 4.48179 63.9369 4.56828 64.3343 4.74128C64.7321 4.91429 65.0584 5.17874 65.3139 5.53463C65.5308 5.83613 65.6634 6.1463 65.7114 6.46511C65.7597 6.78393 65.7839 7.30418 65.7839 8.02585V12.771H63.6803V7.85532C63.6803 7.42035 63.6078 7.06941 63.4635 6.80248C63.2753 6.42683 62.9186 6.23898 62.3934 6.23898C61.8488 6.23898 61.4355 6.42559 61.1537 6.79876C60.8716 7.17198 60.7307 7.70456 60.7307 8.39658V12.771H58.6775V1.87933H60.7307V5.74221C61.0294 5.27263 61.3754 4.94517 61.768 4.7598C62.161 4.57444 62.5743 4.48179 63.008 4.48179Z"
                fill="#818181"
            />
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M92.3577 0.320426L97.5068 7.14092C97.7755 7.50712 97.7755 8.01065 97.5516 8.37685L92.5368 14.9634C92.4025 15.1465 92.2234 15.2381 91.9995 15.2381H68V0H91.7308C91.9547 0 92.2234 0.137325 92.3577 0.320426ZM79.2253 12.5424H79.2386V9.97898H74.4028V8.69747H78.5089V8.69728H78.5222V6.27119H74.4028V5.12701H79.0462V5.12681H79.0595V2.60918H71.179V2.60938H71.1658V12.5426H79.2253V12.5424ZM87.0293 2.65515L87.0294 2.65496H90.5667L87.2085 7.46135L90.7906 12.5882H90.7772L90.7773 12.5884H87.0162V12.5426L85.3661 9.89815L83.7161 12.5424H83.7029L83.7028 12.5426H79.9865L83.4789 7.55309L80.076 2.65515H80.0894L80.0893 2.65496H83.7608L85.4109 5.16247L87.0162 2.65515H87.0293Z"
                fill="#818181"
            />
        </g>
    </svg>
);


export const ArrowForward: React.FC<IconProps> = ({
    width = 19,
    height = 16,
    fill = '#000',
    className = '',
}) => {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            className={className != '' ? className : undefined}
            width={width}
            height={height}
            fill={fill}
            viewBox="0 0 19 16"
        >
            <path
                d="M7.92349123,0.707665364 L9.95936846,2.7435426 L6.21716346,6.4857476 L19.256232,6.4857476 L19.256232,9.3658776 L6.220282,9.3658776 L9.962412,13.1080076 L7.92349123,15.1469284 L0.705198992,7.9259576 L7.92349123,0.707665364 Z"
                transform="matrix(-1 0 0 1 19.265 .074)"
            />
        </svg>
    );
};

export const Support: React.FC<IconProps> = () => (
    <svg
        width="12"
        height="12"
        viewBox="0 0 12 12"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M6 1.09091C3.28878 1.09091 1.09091 3.28878 1.09091 6C1.09091 8.71122 3.28878 10.9091 6 10.9091C8.71122 10.9091 10.9091 8.71122 10.9091 6C10.9091 3.28878 8.71122 1.09091 6 1.09091ZM0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6Z"
            fill="#B0B0B0"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M6.14281 3.83123C5.88889 3.78767 5.62775 3.83539 5.40564 3.96592C5.18353 4.09646 5.01478 4.30139 4.92929 4.54442C4.82932 4.8286 4.51791 4.97793 4.23374 4.87796C3.94956 4.77799 3.80023 4.46659 3.9002 4.18241C4.07118 3.69635 4.40867 3.28649 4.85289 3.02542C5.29711 2.76434 5.81939 2.66891 6.32723 2.75602C6.83508 2.84313 7.2957 3.10716 7.62753 3.50134C7.95928 3.89544 8.14089 4.39422 8.1402 4.90937C8.13995 5.74411 7.52107 6.29536 7.07913 6.58999C6.84151 6.7484 6.60777 6.86488 6.43559 6.9414C6.34873 6.98001 6.27558 7.00931 6.22287 7.02939C6.19647 7.03944 6.17507 7.04724 6.15949 7.05278L6.14055 7.05941L6.13451 7.06147L6.13239 7.06219L6.13155 7.06247C6.13139 7.06252 6.13087 7.0627 5.95838 6.54523L6.13087 7.0627C5.84508 7.15796 5.53618 7.00351 5.44092 6.71772C5.34572 6.43212 5.4999 6.12344 5.78532 6.02796L5.78462 6.02819C5.78468 6.02818 5.78473 6.02816 5.78532 6.02796L5.79402 6.02491C5.80241 6.02192 5.81617 6.01693 5.83451 6.00994C5.87129 5.99593 5.92599 5.97409 5.99253 5.94452C6.12717 5.88468 6.30252 5.79661 6.474 5.6823C6.85014 5.43153 7.04929 5.16476 7.04929 4.90887L7.04929 4.90806C7.04967 4.65043 6.95887 4.40098 6.79295 4.20389C6.62704 4.00679 6.39673 3.87478 6.14281 3.83123Z"
            fill="#B0B0B0"
        />
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M5.45312 8.7271C5.45312 8.42585 5.69733 8.18164 5.99858 8.18164H6.00403C6.30528 8.18164 6.54949 8.42585 6.54949 8.7271C6.54949 9.02834 6.30528 9.27255 6.00403 9.27255H5.99858C5.69733 9.27255 5.45312 9.02834 5.45312 8.7271Z"
            fill="#B0B0B0"
        />
    </svg>
);

export const RoundedCheck: React.FC<IconProps> = ({
    width = 12,
    height = 10,
    fill = '#fff',
}) => (
    <svg
        width={width}
        height={height}
        viewBox="0 0 12 10"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M11.5769 0.955782C12.1536 1.55051 12.1389 2.50015 11.5442 3.07685L5.35672 9.07685C4.77489 9.64105 3.85011 9.64105 3.26828 9.07685L0.455782 6.34958C-0.138946 5.77287 -0.153556 4.82324 0.42315 4.22851C0.999857 3.63378 1.94949 3.61917 2.54422 4.19588L4.3125 5.91058L9.45578 0.923151C10.0505 0.346444 11.0001 0.361054 11.5769 0.955782Z"
            fill={fill}
        />
    </svg>
);